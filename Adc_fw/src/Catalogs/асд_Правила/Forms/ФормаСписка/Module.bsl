#Область СобытияФормы

&НаСервере
Функция ПолучитьURLЛоготипа()
	
	Возврат асд_ОсновнойМодульСервер.ПолучитьURLЛоготипа();
	
КонецФункции

&НаКлиенте
Процедура ТекстАСДНажатие(Элемент)
	
	ПерейтиПоНавигационнойСсылке(ПолучитьURLЛоготипа());
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ЗаполнитьСписокОбъектовПоМетаданным();
	ЗаполнитьСписокВидовНастроек();
	
	ИспользоватьАСД();
	
КонецПроцедуры

#КонецОбласти
 
#Область СобытияЭлементовФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Группа = Истина Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ЭтаСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ЭтаСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ЭтаСтрока.ЭтоГруппа = Истина Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектОснованиеОтборПриИзменении(Элемент)
	
	ТипОбъектОснование = ВидОбъектОснованиеОтбор + "." + ТипОбъектОснованиеОтбор;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ТипОбъектОснование", ТипОбъектОснование, , , ЗначениеЗаполнено(ТипОбъектОснованиеОтбор));
		
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектРезультатОтборПриИзменении(Элемент)
	
	ТипОбъектРезультат = ВидОбъектРезультатОтбор + "." + ТипОбъектРезультатОтбор;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ТипОбъектРезультат", ТипОбъектРезультат, , , ЗначениеЗаполнено(ТипОбъектРезультатОтбор));
		
КонецПроцедуры

&НаКлиенте
Процедура ВидШаблонаОтборПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Активно", (ВидШаблонаОтбор = "Активные"), ВидСравненияКомпоновкиДанных.Равно,
			, (ВидШаблонаОтбор = "Активные" ИЛИ ВидШаблонаОтбор = "Отключенные"));
			
	Элементы.Список.Развернуть(0, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектОснованиеОтборПриИзменении(Элемент)
	
	ВидОбъектПриИзмененииНаСервере("ТипОбъектОснованиеОтбор", ВидОбъектОснованиеОтбор);
	ТипОбъектОснованиеОтборПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОбъектРезультатОтборПриИзменении(Элемент)
	
	ВидОбъектПриИзмененииНаСервере("ТипОбъектРезультатОтбор", ВидОбъектРезультатОтбор);
	ТипОбъектРезультатОтборПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСвязанныеОбъекты(Команда)
	
	ОткрытьФорму("РегистрСведений.асд_СвязанныеОбъекты.ФормаСписка");
	
КонецПроцедуры

&НаСервере
Процедура ИспользоватьАСДПриИзмененииНаСервере()
	
	Константы.асд_ИспользоватьАСД.Установить(ИспользоватьАСД);
	ИспользоватьАСД();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАСДПриИзменении(Элемент)
	
	ИспользоватьАСДПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИспользоватьАСД()
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		ИспользоватьАСД = Ложь;
		Элементы.ИспользоватьАСД.Доступность = Ложь;
	Иначе
		ИспользоватьАСД = Константы.асд_ИспользоватьАСД.Получить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ЭтоГруппа");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Активно");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(160, 160, 164));
	
КонецПроцедуры

&НаСервере
Процедура ВидОбъектПриИзмененииНаСервере(ИмяЭлемента, ВидОбъект)
	
	Справочники.асд_Правила.ЗаполнитьСписокВыбораОбъектамиПоМетаданным(Элементы[ИмяЭлемента].СписокВыбора, ВидОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокОбъектовПоМетаданным()
	
	Справочники.асд_Правила.ЗаполнитьСписокВыбораВидовОбъектов(Элементы.ВидОбъектОснованиеОтбор.СписокВыбора);
	Справочники.асд_Правила.ЗаполнитьСписокВыбораВидовОбъектов(Элементы.ВидОбъектРезультатОтбор.СписокВыбора);
	
	Справочники.асд_Правила.ЗаполнитьСписокВыбораОбъектамиПоМетаданным(Элементы.ТипОбъектОснованиеОтбор.СписокВыбора, ВидОбъектОснованиеОтбор);
	Справочники.асд_Правила.ЗаполнитьСписокВыбораОбъектамиПоМетаданным(Элементы.ТипОбъектРезультатОтбор.СписокВыбора, ВидОбъектРезультатОтбор);
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовНастроек()
	
	СписокВыбора = Элементы.ВидШаблонаОтбор.СписокВыбора;
	СписокВыбора.Добавить("Активные");
	СписокВыбора.Добавить("Отключенные");
	
КонецПроцедуры

#КонецОбласти


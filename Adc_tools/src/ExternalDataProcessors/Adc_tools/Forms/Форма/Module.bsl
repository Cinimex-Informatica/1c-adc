#Область ПроцедурыПравилАСД

&НаСервере
Процедура Документ_ЗаказКлиента___Документ_РеализацияТоваровУслуг(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)

	Для Каждого СтрокаТоварыЗаказ Из ОбъектОснование.Товары Цикл
		ДокументПриемник = асд_ОсновнойМодульСервер.ПолучитьСледующийПодчиненныйОбъект(ОбъектОснование, НайденныеСсылки, Правило);
		
		ДокументПриемник.Товары.Очистить();
		ДокументПриемник.СкидкиНаценки.Очистить();
		ДокументПриемник.ДополнительныеРеквизиты.Очистить();
		ДокументПриемник.РасшифровкаПлатежа.Очистить();
		ДокументПриемник.Серии.Очистить();
		ДокументПриемник.ВидыЗапасов.Очистить();
		ДокументПриемник.ЭтапыГрафикаОплаты.Очистить();
		ДокументПриемник.ШтрихкодыУпаковок.Очистить();
		
		ДокументПриемник.Заполнить(ОбъектОснование);
		
		//Оставляем только нужную строку
		ТЗТовары = ДокументПриемник.Товары.Выгрузить();
		ДокументПриемник.Товары.Очистить();
		
		СтруктураОтбор = Новый Структура("НомерСтроки", СтрокаТоварыЗаказ.НомерСтроки);
		НайденныеСтроки = ТЗТовары.Скопировать(СтруктураОтбор);
		
		Если НайденныеСтроки.Количество() Тогда
			НоваяСтрока = ДокументПриемник.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0]);
		КонецЕсли;
		
		ДокументПриемник.СкидкиРассчитаны = Истина;
		ДокументПриемник.Дата = ?(ЗначениеЗаполнено(ОбъектОснование.ЖелаемаяДатаОтгрузки), ОбъектОснование.ЖелаемаяДатаОтгрузки, ОбъектОснование.Дата);
		
		МассивОбъектов.Добавить(ДокументПриемник);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура Документ_ЗаказКлиента___Документ_ДоверенностьВыданная(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)
	
	ДокументПриемник = асд_ОсновнойМодульСервер.ПолучитьСледующийПодчиненныйОбъект(ОбъектОснование, НайденныеСсылки, Правило);
	
	ДокументПриемник.Заполнить(ОбъектОснование.Ссылка);
	ДокументПриемник.Дата = ОбъектОснование.Дата;
	
	МассивОбъектов.Добавить(ДокументПриемник);
	
КонецПроцедуры

&НаСервере
Процедура Документ_РеализацияТоваровУслуг___Документ_СчетФактураВыданный(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)
	
	ДокументПриемник = асд_ОсновнойМодульСервер.ПолучитьСледующийПодчиненныйОбъект(ОбъектОснование, НайденныеСсылки, Правило);
	
	ДанныеЗаполнения = Новый Структура("ДокументОснование");
	ДанныеЗаполнения.ДокументОснование = ОбъектОснование.Ссылка;
	
	ДокументПриемник.Заполнить(ДанныеЗаполнения);
	ДокументПриемник.Дата = ОбъектОснование.Дата;
	
	МассивОбъектов.Добавить(ДокументПриемник);
	
КонецПроцедуры

&НаСервере
Процедура Документ_РеализацияТоваровУслуг___Документ_ПриходныйКассовыйОрдер(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)
	
    ДокументПриемник = асд_ОсновнойМодульСервер.ПолучитьСледующийПодчиненныйОбъект(ОбъектОснование, НайденныеСсылки, Правило);
	
	ДокументПриемник.РасшифровкаПлатежа.Очистить();

	ДокументПриемник.Заполнить(ОбъектОснование);
	ДокументПриемник.Дата = ОбъектОснование.Дата;

    Для Каждого СтрокаРасшифровки Из 	ДокументПриемник.РасшифровкаПлатежа Цикл
        СтрокаРасшифровки.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента;
    КонецЦикла;

	ДокументПриемник.Дата = ОбъектОснование.Дата;
	
	МассивОбъектов.Добавить(ДокументПриемник);
	
КонецПроцедуры

&НаСервере
Процедура Документ_ПриходныйКассовыйОрдер___Документ_СчетФактураВыданныйАванс(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)
	
	ДокументПриемник = асд_ОсновнойМодульСервер.ПолучитьСледующийПодчиненныйОбъект(ОбъектОснование, НайденныеСсылки, Правило);
	
	ДокументПриемник.Заполнить(ОбъектОснование);
	ДокументПриемник.Дата = ОбъектОснование.Дата;
	
	
	Если ОбъектОснование.РасшифровкаПлатежа.Количество() Тогда
		СтрокаАвансы = ДокументПриемник.Авансы.Добавить();
		СтрокаТовар = ОбъектОснование.РасшифровкаПлатежа[0].ОснованиеПлатежа.Товары[0];
		
		ЗаполнитьЗначенияСвойств(СтрокаАвансы, СтрокаТовар);
		
		СтрокаАвансы.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
	КонецЕсли;
	
	МассивОбъектов.Добавить(ДокументПриемник);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьПодчиненныеОбъектыСервер()
	
	МассивОбъектов = Новый Массив;
	Правило = Объект.Правило;
	СтрокаОшибок = "";
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	асд_Правила.ТипОбъектРезультат КАК ТипОбъектРезультат,
	|	асд_Правила.Ссылка КАК Настройка
	|ИЗ
	|	Справочник.асд_Правила КАК асд_Правила
	|ГДЕ
	|	асд_Правила.ПометкаУдаления = ЛОЖЬ
	|	И асд_Правила.ТипОбъектОснование = &ТипОбъектОснование
	|	И НЕ асд_Правила.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	асд_СвязанныеОбъекты.Правило КАК Правило,
	|	асд_СвязанныеОбъекты.ОбъектРезультат КАК ОбъектРезультат,
	|	асд_СвязанныеОбъекты.ДатаСоздания КАК ДатаСоздания
	|ИЗ
	|	РегистрСведений.асд_СвязанныеОбъекты КАК асд_СвязанныеОбъекты
	|ГДЕ
	|	асд_СвязанныеОбъекты.ОбъектОснование = &ОбъектОснование
	|	И асд_СвязанныеОбъекты.Правило = &Правило
	|
	|УПОРЯДОЧИТЬ ПО
	|	асд_СвязанныеОбъекты.Правило,
	|	асд_СвязанныеОбъекты.ДатаСоздания УБЫВ";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОбъектОснование", Объект.ОбъектОснование); 
	Запрос.УстановитьПараметр("Правило", Объект.Правило); 
	Запрос.УстановитьПараметр("ТипОбъектОснование", асд_ОсновнойМодульСервер.ПолучитьИмяТипаОбъекта(Объект.ОбъектОснование));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	НайденныеОбъекты = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("ОбъектРезультат");
	
	ИмяПроцедуры = СокрЛП(СтрЗаменить(Объект.Правило.ТипОбъектОснование, ".", "_")) + "___" + СокрЛП(СтрЗаменить(Объект.Правило.ТипОбъектРезультат, ".", "_"));
	ВызовПроцедуры = ИмяПроцедуры + "(Объект.ДокументОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеОбъекты);";
	
	Выполнить(ВызовПроцедуры);
	
	Для Каждого СозданныйОбъект Из МассивОбъектов Цикл
		//СозданныйОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПодчиненныеОбъекты(Команда)
	
	СформироватьПодчиненныеОбъектыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПравилоПриИзмененииНаСервере()
	
	Объект.ОбъектОснование = Неопределено;
	
	СтрокаТипа = СтрЗаменить(Объект.Правило.ТипОбъектОснование, "Документ.", "ДокументСсылка.");
	СтрокаТипа = СтрЗаменить(СтрокаТипа, "Справочник.", "СправочникСсылка.");
	ОписаниеТипаОбъектаОснования = Новый ОписаниеТипов(СтрокаТипа); 
	
	Элементы.ОбъектОснование.ОграничениеТипа = ОписаниеТипаОбъектаОснования;
	
	ИмяПроцедуры = СокрЛП(СтрЗаменить(Объект.Правило.ТипОбъектОснование, ".", "_")) + "___" + СокрЛП(СтрЗаменить(Объект.Правило.ТипОбъектРезультат, ".", "_"));
	ТекстПроцедуры = "&НаСервере" + Символы.ПС + "Процедура " + ИмяПроцедуры + "(ОбъектОснование, МассивОбъектов, Правило, СтрокаОшибок, Отказ, НайденныеСсылки)" + Символы.ПС + 
					"КонецПроцедуры";
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоПриИзменении(Элемент)
	
	ПравилоПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти 
